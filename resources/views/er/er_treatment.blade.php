<!DOCTYPE html>
<html lang="th">
@include('themes.head')




<body class="hold-transition layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        @include('themes.er.navbarer')
        <!-- Main Sidebar Container -->
        @include('themes.er.menuer')
        <div class="content-wrapper">
            <div class="content-header">
                <div class="container-fluid">

                    <div class="container mt-5">
                        <h4>‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ER</h4>
                        <div class="table-container bg-white p-4 rounded shadow-sm border">

                            <table id="medicalTable" class="table table-striped table-bordered">
                                <thead class="table-dark">

                                    <tr>
                                        <th>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</th>
                                        <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏´‡∏≤‡∏£</th>
                                        <th>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</th>
                                        <th>‡∏ß‡∏±‡∏ô-‡πÄ‡∏ß‡∏•‡∏≤ & ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</th>
                                        <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô</th>
                                        <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach($treatments as $treatment)
                                        <tr>
                                            <td>{{ $treatment->checkin->appointment->medicalReport->soldier->soldier_id_card }}
                                            </td>
                                            <td>{{ $treatment->checkin->appointment->medicalReport->soldier->first_name }}
                                                {{ $treatment->checkin->appointment->medicalReport->soldier->last_name }}
                                            </td>
                                            <td>{{ $treatment->checkin->appointment->medicalReport->symptom_description }}
                                            </td>
                                            <td>{{ $treatment->checkin->appointment->appointment_date }}<br>
                                                <span class="badge bg-danger">ER</span>
                                            </td>
                                            <td>
                                                @if($treatment->checkin->checkin_status == 'checked-in')
                                                    <button class="btn btn-custom-checked-in">üü¢ ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß</button>
                                                @else
                                                    <button class="btn btn-custom-not-checked-in">üü† ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô</button>
                                                @endif

                                            </td>
                                            <td>
                                                @if ($treatment->checkin && $treatment->checkin->treatment)
                                                    @if ($treatment->checkin->treatment->treatment_status === 'treated')
                                                        <span>üü¢ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡πâ‡∏ß</span>
                                                    @else
                                                        <button class="btn btn-custom-not-treated btn-sm"
                                                            onclick="openDiagnosisModal({{ $treatment->checkin->treatment->id }}, {{ $treatment->checkin->appointment->medicalReport->vital_signs_id ?? '0' }})">
                                                            üü† ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤
                                                        </button>
                                                    @endif
                                                @else
                                                    <span class="badge bg-secondary">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
                                                @endif

                                            </td>
                                        </tr>
                                    @endforeach
                                </tbody>
                            </table>

                            <!-- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• -->
                            @if($treatments->isEmpty())
                                <div class="alert alert-danger text-center">
                                    ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "in ER"
                                </div>
                            @endif
                        </div>

                        <!-- Modal -->
                        <div class="modal fade" id="treatmentModal" tabindex="-1" aria-labelledby="diagnosisModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="treatmentModalLabel">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form id="diagnosisForm">
                                            <input type="hidden" id="treatmentId">

                                            <div class="mb-3">
                                                <label for="doctorName" class="form-label">‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏û‡∏ó‡∏¢‡πå:</label>
                                                <input type="text" class="form-control" id="doctorName" required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="temperature" class="form-label">‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ (¬∞C):</label>
                                                <input type="number" step="0.1" class="form-control" id="temperature">
                                            </div>
                                            <div class="mb-3">
                                                <label for="bloodPressure" class="form-label">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï:</label>
                                                <input type="text" class="form-control" id="bloodPressure">
                                            </div>
                                            <div class="mb-3">
                                                <label for="heartRate" class="form-label">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à:</label>
                                                <input type="number" class="form-control" id="heartRate">
                                            </div>
                                            <div class="mb-3">
                                                <label for="icd10Code" class="form-label">‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ (ICD10):</label>
                                                <input type="text" class="form-control" id="icd10Code" name="icd10_code"
                                                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ , " oninput="fetchDiseaseInfo(this.value)"
                                                    required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="diseaseDescription" class="form-label">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ:</label>
                                                <input type="text" class="form-control" id="diseaseDescription"
                                                    readonly>
                                            </div>
                                            <div class="mb-3">
                                                <label for="treatmentStatus" class="form-label">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤:</label>
                                                <select class="form-select" id="treatmentStatus" required>
                                                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ --</option>
                                                    <option value="Admit">Admit (‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤)</option>
                                                    <option value="Refer">Refer (‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠)</option>
                                                    <option value="Discharge">Discharge (‡∏à‡∏≥‡∏´‡∏ô‡πà‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å)</option>
                                                    <option value="Follow-up">Follow-up (‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£)</option>
                                                </select>
                                            </div>

                                            <button type="submit" class="btn btn-success">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </div>
</body>

<style>
    body {
        background-color: #f4f7fc;
        color: #333;
    }

    .container {
        max-width: 1200px;
        margin: 50px auto;
        background-color: #fff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    h4 {
        color: #2b9b6a;
        font-size: 28px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 30px;
    }

    .table th,
    .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table {
        border: 1px solid #ddd;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .table-bordered th,
    .table-bordered td {
        border: 1px solid #ddd;
    }


    .btn {
        font-size: 14px;
        padding: 5px 10px;
        cursor: pointer;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
        border: none;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-warning {
        background-color: #ffc107;
        color: white;
        border: none;
    }

    .btn-warning:hover {
        background-color: #e0a800;
    }

    .alert {
        margin-top: 20px;
        font-size: 1.2rem;
        color: rgb(255, 255, 255);
    }

    .alert-success {
        color: #28a745;
    }

    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß" */
    .btn-custom-checked-in {
        background-color: white;
        /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */

        /* ‡∏Å‡∏£‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
        color: #28a745;
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏≤‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏° */
        font-size: 14px;
        /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
        padding: 8px 15px;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏° */
        transition: all 0.3s ease;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
    }

    .btn-custom-checked-in:hover {
        background-color: #28a745;
        /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
        color: white;
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
    }

    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô" */
    .btn-custom-not-checked-in {
        background-color: white;
        /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
        border: 1px solid #ffc107;
        /* ‡∏Å‡∏£‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á */
        color: rgb(0, 0, 0);
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏≤‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏° */
        font-size: 14px;
        /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
        padding: 8px 15px;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏° */
        transition: all 0.3s ease;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
    }

    .btn-custom-not-checked-in:hover {
        background-color: rgb(0, 0, 0);
        /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
        color: white;
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
    }

    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤" */
    /* ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤" */
    .btn-custom-not-treated {
        background-color: white;
        /* ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
        border: 1px solidrgb(255, 255, 255);
        /* ‡∏Å‡∏£‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á */
        color: #ffc107;
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏≤‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏° */
        font-size: 14px;
        /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ */
        padding: 8px 15px;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏° */
        transition: all 0.3s ease;
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
    }

    /* ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏≤‡πÅ‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
    .btn-custom-not-treated:hover {
        background-color: #ffc107;
        /* ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ Hover */
        color: black;
        /* ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß */
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏≤‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ hover */
    }
</style>

<script>
    async function updateTreatmentStatus(treatmentId) {
        let csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute("content");

        try {
            // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏õ‡πá‡∏ô "‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡πâ‡∏ß"
            let response = await fetch(`/treatments/${treatmentId}/update-status`, {
                method: "PUT",
                headers: {
                    "X-CSRF-TOKEN": csrfToken,
                    "Accept": "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    treatment_id: treatmentId,
                    treatment_status: "treated"  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 'treated'
                })
            });

            let data = await response.json();

            if (response.ok) {
                Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß", "success")
                    .then(() => location.reload()); // ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ï‡∏£‡∏á‡∏à‡∏∏‡∏î‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤
            } else {
                Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", data.message, "error");
            }

        } catch (error) {
            Swal.fire("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö", "error");
        }
    }

</script>
<script>
    async function openDiagnosisModal(treatmentId) {
        console.log("‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Treatment ID:", treatmentId);
        document.getElementById('treatmentId').value = treatmentId;

        // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• vital_signs_id ‡∏à‡∏≤‡∏Å treatment_id
        const response = await fetch(`/api/vital-signs/from-treatment/${treatmentId}`);
        const data = await response.json();

        if (response.ok) {
            // ‡∏´‡∏≤‡∏Å‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('temperature').value = data.temperature || '';
            document.getElementById('bloodPressure').value = data.blood_pressure || '';
            document.getElementById('heartRate').value = data.heart_rate || '';
        } else {
            console.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Vital Signs");
            Swal.fire("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Vital Signs ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "error");
        }

        // ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å backdrop static
        var modal = new bootstrap.Modal(document.getElementById('treatmentModal'), {
            backdrop: 'static',  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å Modal
            keyboard: false      // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏∏‡πà‡∏° Escape
        });

        modal.show();  // ‡πÅ‡∏™‡∏î‡∏á Modal
    }

</script>
<script>
    document.getElementById('diagnosisForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        let treatmentId = document.getElementById('treatmentId').value;
        let doctorName = document.getElementById('doctorName').value;
        let temperature = document.getElementById('temperature').value;
        let bloodPressure = document.getElementById('bloodPressure').value;
        let heartRate = document.getElementById('heartRate').value;
        let icd10Code = document.getElementById('icd10Code').value; // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
        let csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute("content");
        let treatmentStatus = document.getElementById('treatmentStatus').value;


        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ
        if (!icd10Code) {
            Swal.fire("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ (ICD10)", "error");
            return;
        }

        // ‡πÅ‡∏¢‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å (‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏à‡∏∏‡∏•‡∏†‡∏≤‡∏Ñ)
        let codesArray = icd10Code.split(',');

        try {
            let response = await fetch("/treatment/add-diagnosis", {
                method: "POST",
                headers: {
                    "X-CSRF-TOKEN": csrfToken,
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    treatment_id: treatmentId,
                    doctor_name: doctorName,
                    temperature,
                    blood_pressure: bloodPressure,
                    heart_rate: heartRate,
                    icd10_code: icd10Code,
                    treatment_status: treatmentStatus   // ‡∏™‡πà‡∏á‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
                })
            });

            let data = await response.json();

            if (response.ok) {
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤
                const statusUpdated = await updateTreatmentStatus(treatmentId);

                if (statusUpdated) {
                    Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success")
                        .then(() => location.reload());
                } else {
                    Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ", "error");
                }
            } else {
                Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", data.message || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "error");
            }
        } catch (error) {
            Swal.fire("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${error.message || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î'}`, "error");
        }
    });

    async function fetchDiseaseInfo(codes) {
        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        const codeArray = codes.split(',');  // ‡πÅ‡∏¢‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏°‡∏°‡∏≤ (,)

        let diseaseDescriptions = [];  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ

        try {
            // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Promise.all
            const requests = codeArray.map(async (code) => {
                const response = await fetch(`/diseases/${code.trim()}`, {
                    method: 'GET',
                    headers: {
                        'X-CSRF-TOKEN': csrfToken,
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    const data = await response.json();
                    console.log(`API Response for ${code.trim()}:`, data);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å API

                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ data.diseases[0] ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                    if (data.diseases && data.diseases.length > 0) {
                        return data.diseases[0].disease_name || `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™: ${code.trim()}`;  // ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏à‡∏≤‡∏Å field ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                    } else {
                        return `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™‡πÇ‡∏£‡∏Ñ: ${code.trim()}`;
                    }
                } else {
                    return `‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏´‡∏±‡∏™: ${code.trim()}`;
                }
            });

            // ‡∏£‡∏≠‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô diseaseDescriptions
            diseaseDescriptions = await Promise.all(requests);

            console.log('Disease Descriptions:', diseaseDescriptions);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ diseaseDescriptions

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå
            document.getElementById('diseaseDescription').value = diseaseDescriptions.join(', ');

        } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ', error);
            Swal.fire("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡πÑ‡∏î‡πâ", "error");
        }

        return diseaseDescriptions;
    }


</script>
@include('themes.script')

</html>