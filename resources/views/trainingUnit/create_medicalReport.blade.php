<!DOCTYPE html>
<html lang="en">
@include('themes.head')

<body class="hold-transition layout-fixed">
    <div class="wrapper">
        <!-- Navbar -->
        @include('themes.admin.navbaradmin')
        <!-- Main Sidebar Container -->
        @include('themes.training.menutraining')

        <!-- Content Wrapper -->
        <div class="content-wrapper">
            <div class="content-header">
                <div class="container-fluid">
                    <div class="container">
                        <div class="card shadow-lg p-4">
                            <h4 class="mb-4 fw-bold text-succes">‡∏™‡πà‡∏á‡∏õ‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</h4>
                            <div class="d-flex justify-content-between">
                                <p style="font-size: 20px; font-weight: bold;">
                                    <label>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ù‡∏∂‡∏Å:</label>
                                    <span class="text-success"
                                        style="font-size: 20px; font-weight: 600;">{{ $unit->unit_name }}</span>
                                </p>
                                <p class="text-muted" style="font-size: 18px;">
                                    ‡∏ì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {{ \Carbon\Carbon::now()->setTimezone('Asia/Bangkok')->format('d/m/Y') }}
                                </p>




                            </div>


                            @if (session('success'))
                                <div class="alert alert-success">{{ session('success') }}</div>
                            @endif

                            <form id="medicalForm" action="{{ route('medical.store') }}" method="POST"
                                enctype="multipart/form-data">
                                @csrf



                                <!-- üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏´‡∏≤‡∏£ -->
                                <div class="mb-3">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏´‡∏≤‡∏£</label>
                                        <select id="soldier_select" name="soldier_id" class="form-select" required>
                                            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏´‡∏≤‡∏£ --</option>
                                            @foreach ($soldiers as $soldier)
                                                <option value="{{ $soldier->id }}">{{ $soldier->first_name }}
                                                    {{ $soldier->last_name }}
                                                </option>
                                            @endforeach
                                        </select>
                                    </div>

                                </div>


                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <label class="form-label fw-bold">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</label>
                                        <textarea name="symptom_description" class="form-control" rows="3"
                                            required></textarea>
                                    </div>
                                    <div class="col-12 mb-3">
                                        <label class="form-label fw-bold">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡πá‡∏ö‡∏õ‡∏ß‡∏î (0-10)</label>
                                        <input type="number" name="pain_score" class="form-control" min="0" max="10">
                                    </div>
                                </div>


                                <!-- üîπ ‡∏Ñ‡πà‡∏≤‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï -->
                                <div class="row">
                                    <div class="col-md-3 mb-3">
                                        <label class="form-label fw-bold">‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ (¬∞C)</label>
                                        <input type="number" name="temperature" class="form-control" step="0.1" min="30"
                                            max="45">
                                    </div>
                                    <div class="col-md-3 mb-3">
                                        <label class="form-label fw-bold">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï (SYS/DIA)</label>
                                        <input type="text" name="blood_pressure" class="form-control"
                                            pattern="\d{2,3}/\d{2,3}">
                                    </div>
                                    <div class="col-md-3 mb-3">
                                        <label class="form-label fw-bold">‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à (bpm)</label>
                                        <input type="number" name="heart_rate" class="form-control" min="40" max="180">
                                    </div>
                                    <div class="col-md-3 mb-3">
                                        <label class="form-label fw-bold">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á</label>
                                        <div class="position-relative">
                                            <span id="risk-icon" class="risk-icon"></span>
                                            <input type="text" id="risk_level"
                                                class="form-control text-center fw-bold ps-4" readonly>
                                        </div>
                                    </div>


                                </div>

                                <!-- üîπ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û -->
                                <div class="row mt-4">

                                    <!-- ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à ATK (‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ) -->
                                    <!-- ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à ATK (‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ) -->
                                    <!-- ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à ATK (‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ) -->
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à ATK:</label>
                                        <div class="custom-upload"
                                            onclick="document.getElementById('atk_test_results').click();">
                                            <!-- ‚úÖ ‡πÉ‡∏ä‡πâ name="atk_test_results[]" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ -->
                                            <input type="file" id="atk_test_results" name="atk_test_results[]"
                                                accept="image/*" multiple
                                                onchange="previewMultipleImages(event, 'atkPreviewContainer')">
                                            <div class="upload-content">
                                                <i class="bi bi-camera upload-icon"></i>
                                                <p class="text-muted">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</p>
                                            </div>
                                            <!-- ‚úÖ ‡πÉ‡∏ä‡πâ container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡∏π‡∏õ -->
                                            <div id="atkPreviewContainer" class="preview-container"></div>
                                        </div>
                                    </div>

                                    <!-- ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ (‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ) -->
                                    <div class="col-md-6">
                                        <label class="form-label fw-bold">‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏£:</label>
                                        <div class="custom-upload"
                                            onclick="document.getElementById('symptom_images').click();">
                                            <input type="file" id="symptom_images" name="symptom_images[]"
                                                accept="image/*" multiple
                                                onchange="previewMultipleImages(event, 'symptomPreviewContainer')">
                                            <div class="upload-content">
                                                <i class="bi bi-camera upload-icon"></i>
                                                <p class="text-muted">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</p>
                                            </div>
                                            <div id="symptomPreviewContainer" class="preview-container"></div>
                                        </div>
                                    </div>



                                    <!-- üîπ ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡πÉ‡∏ä‡πâ text-end -->
                                    <!-- ‚úÖ ‡πÉ‡∏ä‡πâ w-100 ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ div ‡πÄ‡∏ï‡πá‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà -->
                                    <div class="d-flex justify-content-end w-100 mt-4">
                                        <button type="submit" class="btn  btn-success">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                                    </div>



                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div><!-- /.container-fluid -->
        </div>
    </div>

    @include('themes.script')
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Select2 -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tempInput = document.querySelector('input[name="temperature"]');
            const bpInput = document.querySelector('input[name="blood_pressure"]');
            const riskLevelField = document.getElementById('risk_level');
            const riskIcon = document.getElementById('risk-icon'); // ‚¨ÖÔ∏è ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á span ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏à‡∏∏‡∏î‡∏™‡∏µ


            function calculateRiskLevel() {
                let temperature = parseFloat(tempInput.value) || 0;
                let bpValue = bpInput.value;

                // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô
                let bpParts = bpValue.split("/");
                if (bpParts.length !== 2) {
                    riskLevelField.value = "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
                    riskLevelField.className = "form-control text-center fw-bold text-dark";
                    return;
                }

                let systolic = parseInt(bpParts[0]) || 0;
                let diastolic = parseInt(bpParts[1]) || 0;

                let riskLevel;

                // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô
                if (temperature > 40) {
                    riskLevel = 'red'; // üî¥ ‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô ‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô 40¬∞C
                } else if (temperature > 38) {
                    riskLevel = 'yellow'; // üü° ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á ‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á
                } else {
                    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï
                    if (systolic >= 180 || diastolic >= 120) {
                        riskLevel = 'red'; // üî¥ ‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô Hypertensive Crisis
                    } else if (systolic >= 140 || diastolic >= 90) {
                        riskLevel = 'red'; // üî¥ ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢ Hypertension Stage 2
                    } else if (systolic >= 121 || diastolic >= 81) {
                        riskLevel = 'yellow'; // üü° ‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á Hypertension Stage 1
                    } else if (systolic < 90 || diastolic < 60) {
                        riskLevel = 'yellow'; // üü° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏ï‡πà‡∏≥
                    } else {
                        riskLevel = 'green'; // üü¢ ‡∏õ‡∏Å‡∏ï‡∏¥
                    }
                }

                // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÉ‡∏ô‡∏ü‡∏¥‡∏•‡∏î‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏µ
                riskLevelField.value = riskLevel.toUpperCase();

                if (riskLevel === 'red') {
                    riskLevelField.value = "‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô"; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                    riskIcon.innerHTML = "üî¥"; // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á
                } else if (riskLevel === 'yellow') {
                    riskLevelField.value = "‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á"; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                    riskIcon.innerHTML = "üü°"; // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
                } else {
                    riskLevelField.value = "‡∏õ‡∏Å‡∏ï‡∏¥"; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                    riskIcon.innerHTML = "üü¢"; // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
                }

            }

            // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á input ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
            tempInput.addEventListener('input', calculateRiskLevel);
            bpInput.addEventListener('input', calculateRiskLevel);
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("Script loaded"); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

            let atkFiles = []; // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            let symptomFiles = []; // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

            function previewMultipleImages(event, containerId, fileList, inputId) {
                const container = document.getElementById(containerId);
                const files = event.target.files;

                // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
                Array.from(files).forEach(file => fileList.push(file));

                // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏†‡∏≤‡∏û‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡∏°‡πà
                container.innerHTML = '';

                // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
                fileList.forEach((file, index) => {
                    let reader = new FileReader();
                    reader.onload = function (e) {
                        let imgWrapper = document.createElement('div');
                        imgWrapper.classList.add('image-preview-wrapper');

                        let img = document.createElement('img');
                        img.src = e.target.result;
                        img.classList.add('preview-img');

                        let removeBtn = document.createElement('button');
                        removeBtn.innerHTML = '&times;';
                        removeBtn.classList.add('remove-image-btn');
                        removeBtn.onclick = function () {
                            fileList.splice(index, 1); // ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
                            previewMultipleImages({ target: { files: [] } }, containerId, fileList, inputId);
                        };

                        imgWrapper.appendChild(img);
                        imgWrapper.appendChild(removeBtn);
                        container.appendChild(imgWrapper);
                    };
                    reader.readAsDataURL(file);
                });

                // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï input file ‡πÉ‡∏´‡∏°‡πà
                let input = document.getElementById(inputId);
                let dataTransfer = new DataTransfer();
                fileList.forEach(file => dataTransfer.items.add(file));
                input.files = dataTransfer.files;
            }

            // ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö input
            document.getElementById('atk_test_results').addEventListener('change', (event) => {
                previewMultipleImages(event, 'atkPreviewContainer', atkFiles, 'atk_test_results');
            });

            document.getElementById('symptom_images').addEventListener('change', (event) => {
                previewMultipleImages(event, 'symptomPreviewContainer', symptomFiles, 'symptom_images');
            });

            // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Laravel
            document.querySelector("form").addEventListener("submit", function (event) {
                event.preventDefault();

                let formData = new FormData(this);

                // ‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
                formData.delete("atk_test_results[]");
                formData.delete("symptom_images[]");

                // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                atkFiles.forEach(file => formData.append("atk_test_results[]", file));
                symptomFiles.forEach(file => formData.append("symptom_images[]", file));

                // ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Laravel

            });

        });





    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("medicalForm").addEventListener("submit", function (event) {
                event.preventDefault(); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

                // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏Å dropdown
                let soldierSelect = document.getElementById("soldier_select");
                let soldierName = soldierSelect.options[soldierSelect.selectedIndex].text.trim();

                if (!soldierSelect.value) {
                    Swal.fire("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏´‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!", "warning");
                    return;
                }

                Swal.fire({
                    title: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á",
                    html: `<span style="color: green; font-size: 23px; font-weight: normal;">‡∏û‡∏•‡∏Ø</span>
           <span style="font-size: 23px; font-weight: normal;">${soldierName} ?</span>`,
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
                    cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                    confirmButtonColor: "#28a745",
                    cancelButtonColor: "#dc3545"
                })
                    .then((result) => {
                        if (result.isConfirmed) {
                            let formData = new FormData(document.getElementById("medicalForm"));

                            fetch("{{ route('medical.store') }}", {
                                method: "POST",
                                body: formData
                            })
                                .then(response => {
                                    return response.headers.get("content-type")?.includes("application/json")
                                        ? response.json()
                                        : Promise.reject("Server response is not JSON");
                                })
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            title: `‡∏™‡πà‡∏á‡∏õ‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á <span style="color: green; font-weight: bold;">‡∏û‡∏•‡∏Ø</span> ${soldierName} <span style="color: green; font-weight: bold;">‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</span>`,
                                            icon: "success",
                                            showConfirmButton: true,
                                            confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
                                            confirmButtonColor: "#28a745",
                                            customClass: {
                                                title: 'small-bold-title' // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
                                            }
                                        })
                                            .then(() => {
                                                console.log("Redirecting to:", data.redirect);
                                                window.location.href = data.redirect; // ‚úÖ ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ wait_appointment
                                            });
                                    } else {
                                        throw new Error("Response does not contain success flag");
                                    }
                                })
                                .catch(error => {
                                    console.error("Error:", error);
                                    Swal.fire("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ", "error");
                                });
                        }
                    });
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $('#soldier_select').select2({
                placeholder: "-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏´‡∏≤‡∏£ --",
                allowClear: true,
                width: '100%' // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
            });
        });
    </script>

    <style>
        .preview-container {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-top: 10px;
        }

        .image-preview-wrapper {
            position: relative;
            display: inline-block;
        }

        .preview-img {
            width: 120px;
            /* üîπ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô */
            height: 120px;
            /* üîπ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô */
            border-radius: 5px;
            border: 1px solid #ccc;
            object-fit: cover;
            /* üîπ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏π‡∏õ‡πÑ‡∏°‡πà‡∏ö‡∏µ‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô */
        }

        .remove-image-btn {
            position: absolute;
            top: -4px;
            /* ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏∏‡∏°‡∏ö‡∏ô‡∏Ç‡∏ß‡∏≤ */
            right: -4px;
            background: red;
            color: white;
            border: none;
            width: 24px;
            /* ‚úÖ ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ */
            height: 24px;
            border-radius: 50%;
            font-size: 16px;
            /* ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î X ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° */
            cursor: pointer;

            /* ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á X ‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏° */
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            line-height: 0;
            padding: 0;
        }



        .custom-upload {
            border: 2px dashed #ccc;
            border-radius: 10px;
            padding: 30px;
            text-align: center;
            cursor: pointer;
            position: relative;
            background-color: #f8f9fa;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 200px;
        }

        .custom-upload:hover {
            background-color: #eef1f4;
        }

        .custom-upload input {
            display: none;
        }

        .upload-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .upload-icon {
            font-size: 40px;
            color: #6c757d;
        }

        .risk-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
        }

        .small-bold-title {
            font-size: 20px !important;
            /* ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á */
            /* ‚úÖ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏´‡∏ô‡∏≤ */
        }
    </style>
</body>

</html>